// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../prisma/generated/client"
  binaryTargets = ["native", "darwin", "debian-openssl-1.1.x", "linux-musl"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  name     String?
  password String
}

model Album {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  label       String
  photos      Photo[]  @relation(name: "Photos")
  mainPhotoId String
  main        Photo    @relation(fields: [mainPhotoId], references: [id], name: "MainPhoto")
}

model ImageFile {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  original  String
  small     String
  large     String

  // todo resolve these relations
  originalFor Photo? @relation(name: "OriginalFile")
  editedFor   Photo? @relation(name: "EditedFile")
}

model Photo {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  originalFileId String    @unique
  originalFile   ImageFile @relation(fields: [originalFileId], references: [id], name: "OriginalFile")
  editedFileId   String    @unique
  editedFile     ImageFile @relation(fields: [editedFileId], references: [id], name: "EditedFile")
  albumId        String
  album          Album     @relation(fields: [albumId], references: [id], name: "Photos")
  label          String
  Album          Album[]   @relation("MainPhoto")
}

enum UrlType {
  PICK
  DOWNLOAD
}

model Url {
  token     String   @id
  createdAt DateTime @default(now())
  expiresAt DateTime
  type      UrlType
}
