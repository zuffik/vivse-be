generator client {
  provider      = "prisma-client-js"
  output        = "../prisma/generated/client"
  binaryTargets = ["native", "darwin", "debian-openssl-1.1.x", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  name     String?
  password String
}

model Album {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  label       String
  mainPhotoId String?
  main        Photo?   @relation("MainPhoto", fields: [mainPhotoId], references: [id])
  photos      Photo[]  @relation("Photos")
}

model ImageFile {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  original    String
  small       String
  large       String
  editedFor   Photo[]  @relation("EditedFile")
  originalFor Photo[]  @relation("OriginalFile")
}

model Photo {
  id             String     @id @default(uuid())
  createdAt      DateTime   @default(now())
  originalFileId String
  editedFileId   String?
  albumId        String
  label          String
  album          Album      @relation("Photos", fields: [albumId], references: [id])
  editedFile     ImageFile? @relation("EditedFile", fields: [editedFileId], references: [id])
  originalFile   ImageFile  @relation("OriginalFile", fields: [originalFileId], references: [id])
  mainFor        Album[]    @relation("MainPhoto")
}

model Url {
  token     String   @id
  createdAt DateTime @default(now())
  expiresAt DateTime
  type      UrlType
}

enum UrlType {
  PICK
  DOWNLOAD
}
